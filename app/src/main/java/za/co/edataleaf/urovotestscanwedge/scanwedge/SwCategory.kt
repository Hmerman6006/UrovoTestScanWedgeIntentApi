package za.co.edataleaf.urovotestscanwedge.scanwedge

class SwCategory {

    companion object {
        const val CAT_READER = "READER"
        const val CAT_OUTPUT = "OUTPUT"
        const val CAT_DECODER = "DECODER"
        const val CAT_FORAMT = "FORAMT"
        const val CAT_FORAMT_ADF = "ADF_FORAMT"
    }

    object Reader {
        const val SCANNER_ENABLE = "SCANNER_ENABLE"
        const val TRIGGERING_MODES = "TRIGGERING_MODES"
        const val SEND_GOOD_READ_BEEP_ENABLE = "SEND_GOOD_READ_BEEP_ENABLE"
        const val SEND_GOOD_READ_VIBRATE_ENABLE = "SEND_GOOD_READ_VIBRATE_ENABLE"
        const val GOOD_READ_BEEP_ENABLE = "GOOD_READ_BEEP_ENABLE"
        const val GOOD_READ_BEEP_AUDIO_FILE = "GOOD_READ_BEEP_AUDIO_FILE"
        const val GOOD_READ_VIBRATE_ENABLE = "GOOD_READ_VIBRATE_ENABLE"
        const val LABEL_APPEND_ENTER = "LABEL_APPEND_ENTER"
        const val TRIGGERING_LOCK = "TRIGGERING_LOCK"
        const val TRIGGERING_SLEEP_WORK = "TRIGGERING_SLEEP_WORK"
        const val LOW_POWER_SLEEP_MODE = "LOW_POWER_SLEEP_MODE"
        const val LOW_POWER_SLEEP_TIMEOUT = "LOW_POWER_SLEEP_TIMEOUT"
        const val SUSPENSION_BUTTON = "SUSPENSION_BUTTON"
        const val SCAN_HANDLE = "SCAN_HANDLE"
        const val VARIABLE_LENGTH_1D_LIMIT = "VARIABLE_LENGTH_1D_LIMIT"
        const val VARIABLE_1D_MIN_LENGTH = "VARIABLE_1D_MIN_LENGTH"
        const val LINEAR_BOUNDARY_CHECK = "LINEAR_BOUNDARY_CHECK"
        const val DEC_ES_TARGET_CONTRAST = "DEC_ES_TARGET_CONTRAST"
        const val DEC_ES_IMAGE_GAMMA = "DEC_ES_IMAGE_GAMMA"
        const val CHARACTER_DATA_DELAY = "CHARACTER_DATA_DELAY"
        const val APPEND_ENTER_DELAY = "APPEND_ENTER_DELAY"
        const val LABEL_SEPARATOR_ENABLE = "LABEL_SEPARATOR_ENABLE"
        const val LABEL_FORMAT_SEPARATOR_CHAR = "LABEL_FORMAT_SEPARATOR_CHAR"
    }

    object OutPut {
        const val OUT_EDITORTEXT_MODE = "OUT_EDITORTEXT_MODE"
        const val OUT_CLIPBOARD_ENABLE = "OUT_CLIPBOARD_ENABLE"
        const val OUT_CLIPBOARD_PASTE_ENABLE = "OUT_CLIPBOARD_PASTE_ENABLE"
        const val DEC_DECODE_DELAY = "DEC_DECODE_DELAY"
        const val DEC_DECODE_DEBUG_MODE = "DEC_DECODE_DEBUG_MODE"
        const val CACHE_DATA_ENABLE = "CACHE_DATA_ENABLE"
        const val CACHE_DATA_LIMIT_ENABLE = "CACHE_DATA_LIMIT_ENABLE"
        const val CACHE_DATA_LIMIT_TIME = "CACHE_DATA_LIMIT_TIME"
        const val WEDGE_KEYBOARD_ENABLE = "WEDGE_KEYBOARD_ENABLE"
        const val WEDGE_KEYBOARD_TYPE = "WEDGE_KEYBOARD_TYPE"
        const val WEDGE_INTENT_ENABLE = "WEDGE_INTENT_ENABLE"
        const val WEDGE_INTENT_ACTION_NAME = "WEDGE_INTENT_ACTION_NAME"
        const val WEDGE_INTENT_CATEGORY_NAME = "WEDGE_INTENT_CATEGORY_NAME"
        const val WEDGE_INTENT_DELIVERY_MODE = "WEDGE_INTENT_DELIVERY_MODE"
        const val WEDGE_INTENT_LABEL_TYPE_TAG = "INTENT_LABEL_TYPE_TAG" //label_type
        const val WEDGE_INTENT_DATA_STRING_TAG = "INTENT_DATA_STRING_TAG" //data_string
        const val WEDGE_INTENT_DECODE_DATA_TAG = "INTENT_DECODE_DATA_TAG" //decode_data
        const val WEDGE_INTENT_FOREGROUND_FLAG = "WEDGE_INTENT_FOREGROUND_FLAG"
        const val WEDGE_INTENT_PACKAGE_NAME = "WEDGE_INTENT_PACKAGE_NAME"
        const val WEBJUMP = "WEBJUMP"
    }

    object Format {
        const val SEND_LABEL_PREFIX_SUFFIX = "SEND_LABEL_PREFIX_SUFFIX"
        const val LABEL_PREFIX = "LABEL_PREFIX"
        const val LABEL_SUFFIX = "LABEL_SUFFIX"
        const val LABEL_MATCHER_PATTERN = "LABEL_MATCHER_PATTERN"
        const val LABEL_MATCHER_TARGETREGEX = "LABEL_MATCHER_TARGETREGEX"
        const val LABEL_MATCHER_REPLACEMENT = "LABEL_MATCHER_REPLACEMENT"
        const val REMOVE_NONPRINT_CHAR = "REMOVE_NONPRINT_CHAR"
        const val CODING_FORMAT = "CODING_FORMAT"
        const val OUTPUT_HEX_STRING_DATA = "OUTPUT_HEX_STRING_DATA"
        const val SEND_TOKENS_FORMAT = "SEND_TOKENS_FORMAT"
        const val SEND_TOKENS_SEPARATOR = "SEND_TOKENS_SEPARATOR"
        const val ENABLE_PARSER_UDICODE = "ENABLE_PARSER_UDICODE"
        const val ENABLE_FORMAT_UDI_DATE = "ENABLE_FORMAT_UDI_DATE"
        const val SEND_CONTROL_CHAR_AS_EVENTS = "SEND_CONTROL_CHAR_AS_EVENTS"
        const val ADVANCE_FORMAT_ENABLE = "ADVANCE_FORMAT_ENABLE"
        const val CODING_FORMAT_NAME = "CODING_FORMAT_NAME"
    }

    object Decoder {
        const val SEND_TOKENS_OPTION = "SEND_TOKENS_OPTION"
        const val IMAGE_PICKLIST_MODE = "IMAGE_PICKLIST_MODE"
        const val CELL_DISPLAY_MODE = "CELL_DISPLAY_MODE"
        const val IMAGE_ONE_D_INVERSE = "IMAGE_ONE_D_INVERSE"
        const val LASER_ON_TIME = "LASER_ON_TIME"
        const val TIMEOUT_BETWEEN_SAME_SYMBOL = "TIMEOUT_BETWEEN_SAME_SYMBOL"
        const val LINEAR_CODE_TYPE_SECURITY_LEVEL = "LINEAR_CODE_TYPE_SECURITY_LEVEL"
        const val LINEAR_1D_QUIET_ZONE_LEVEL = "LINEAR_1D_QUIET_ZONE_LEVEL"
        const val FUZZY_1D_PROCESSING = "FUZZY_1D_PROCESSING"
        const val MULTI_DECODE_MODE = "MULTI_DECODE_MODE"
        const val BAR_CODES_TO_READ = "BAR_CODES_TO_READ"
        const val FULL_READ_MODE = "FULL_READ_MODE"
        const val IMAGE_EXPOSURE_MODE = "IMAGE_EXPOSURE_MODE"
        const val IMAGE_FIXED_EXPOSURE = "IMAGE_FIXED_EXPOSURE"
        const val TRANSMIT_CODE_ID = "TRANSMIT_CODE_ID"
        const val DPM_DECODE_MODE = "DPM_DECODE_MODE"
        const val CODE39_ENABLE = "CODE39_ENABLE"
        const val CODE39_ENABLE_CHECK = "CODE39_ENABLE_CHECK"
        const val CODE39_SEND_CHECK = "CODE39_SEND_CHECK"
        const val CODE39_FULL_ASCII = "CODE39_FULL_ASCII"
        const val CODE39_Quiet_Zone = "CODE39_Quiet_Zone"
        const val CODE39_START_STOP = "CODE39_START_STOP"
        const val CODE39_SECURITY_LEVEL = "CODE39_SECURITY_LEVEL"
        const val CODE39_LENGTH1 = "CODE39_LENGTH1"
        const val CODE39_LENGTH2 = "CODE39_LENGTH2"
        const val TRIOPTIC_ENABLE = "TRIOPTIC_ENABLE"
        const val CODE32_ENABLE = "CODE32_ENABLE"
        const val CODE32_SEND_START = "CODE32_SEND_START"
        const val C25_ENABLE = "C25_ENABLE"
        const val D25_ENABLE = "D25_ENABLE"
        const val D25_ENABLE_CHECK = "D25_ENABLE_CHECK"
        const val D25_LENGTH1 = "D25_LENGTH1"
        const val D25_LENGTH2 = "D25_LENGTH2"
        const val M25_ENABLE = "M25_ENABLE"
        const val M25_ENABLE_CHECK = "M25_ENABLE_CHECK"
        const val M25_SEND_CHECK = "M25_SEND_CHECK"
        const val M25_LENGTH1 = "M25_LENGTH1"
        const val M25_LENGTH2 = "M25_LENGTH2"
        const val CODE11_ENABLE = "CODE11_ENABLE"
        const val CODE11_ENABLE_CHECK = "CODE11_ENABLE_CHECK"
        const val CODE11_SEND_CHECK = "CODE11_SEND_CHECK"
        const val CODE11_LENGTH1 = "CODE11_LENGTH1"
        const val CODE11_LENGTH2 = "CODE11_LENGTH2"
        const val I25_ENABLE = "I25_ENABLE"
        const val I25_ENABLE_CHECK = "I25_ENABLE_CHECK"
        const val I25_SEND_CHECK = "I25_SEND_CHECK"
        const val I25_QUIET_ZONE = "I25_QUIET_ZONE"
        const val I25_SECURITY_LEVEL = "I25_SECURITY_LEVEL"
        const val I25_LENGTH1 = "I25_LENGTH1"
        const val I25_LENGTH2 = "I25_LENGTH2"
        const val I25_TO_EAN13 = "I25_TO_EAN13"
        const val CODABAR_ENABLE = "CODABAR_ENABLE"
        const val CODABAR_ENABLE_CHECK = "CODABAR_ENABLE_CHECK"
        const val CODABAR_SEND_CHECK = "CODABAR_SEND_CHECK"
        const val CODABAR_SEND_START = "CODABAR_SEND_START"
        const val CODABAR_CONCATENATE = "CODABAR_CONCATENATE"
        const val CODABAR_NOTIS = "CODABAR_NOTIS"
        const val CODABAR_CLSI = "CODABAR_CLSI"
        const val CODABAR_WIDE_GAPS = "CODABAR_WIDE_GAPS"
        const val CODABAR_LENGTH1 = "CODABAR_LENGTH1"
        const val CODABAR_LENGTH2 = "CODABAR_LENGTH2"
        const val CODE93_ENABLE = "CODE93_ENABLE"
        const val CODE93_LENGTH1 = "CODE93_LENGTH1"
        const val CODE93_LENGTH2 = "CODE93_LENGTH2"
        const val CODE128_ENABLE = "CODE128_ENABLE"
        const val CODE128_LENGTH1 = "CODE128_LENGTH1"
        const val CODE128_LENGTH2 = "CODE128_LENGTH2"
        const val CODE_ISBT_128 = "CODE_ISBT_128"
        const val CODE128_REDUCED_QUIET_ZONE = "CODE128_REDUCED_QUIET_ZONE"
        const val CODE128_CHECK_ISBT_TABLE = "CODE128_CHECK_ISBT_TABLE"
        const val CODE_ISBT_Concatenation_MODE = "CODE_ISBT_Concatenation_MODE"
        const val CODE128_SECURITY_LEVEL = "CODE128_SECURITY_LEVEL"
        const val CODE128_IGNORE_FNC4 = "CODE128_IGNORE_FNC4"
        const val CODE128_GS1_ENABLE = "CODE128_GS1_ENABLE"
        const val GS1128__UCCEAN_Composite = "GS1128__UCCEAN_Composite"
        const val UPCA_ENABLE = "UPCA_ENABLE"
        const val UPCA_SEND_CHECK = "UPCA_SEND_CHECK"
        const val UPCA_SEND_SYS = "UPCA_SEND_SYS"
        const val UPCA_TO_EAN13 = "UPCA_TO_EAN13"
        const val UPCE_ENABLE = "UPCE_ENABLE"
        const val UPCE_SEND_CHECK = "UPCE_SEND_CHECK"
        const val UPCE_SEND_SYS = "UPCE_SEND_SYS"
        const val UPCE_TO_UPCA = "UPCE_TO_UPCA"
        const val UPCE1_ENABLE = "UPCE1_ENABLE"
        const val UPCE1_SEND_CHECK = "UPCE1_SEND_CHECK"
        const val UPCE1_SEND_SYS = "UPCE1_SEND_SYS"
        const val UPCE1_TO_UPCA = "UPCE1_TO_UPCA"
        const val EAN13_ENABLE = "EAN13_ENABLE"
        const val EAN13_SEND_CHECK = "EAN13_SEND_CHECK"
        const val EAN13_BOOKLANDEAN = "EAN13_BOOKLANDEAN"
        const val EAN13_BOOKLAND_FORMAT = "EAN13_BOOKLAND_FORMAT"
        const val EAN8_ENABLE = "EAN8_ENABLE"
        const val EAN8_SEND_CHECK = "EAN8_SEND_CHECK"
        const val EAN8_TO_EAN13 = "EAN8_TO_EAN13"
        const val EAN_EXT_ENABLE_2_5_DIGIT = "EAN_EXT_ENABLE_2_5_DIGIT"
        const val UPC_EAN_SECURITY_LEVEL = "UPC_EAN_SECURITY_LEVEL"
        const val UCC_COUPON_EXT_CODE = "UCC_COUPON_EXT_CODE"
        const val UCC_COUPON_EXT_REPORT_MODE = "UCC_COUPON_EXT_REPORT_MODE"
        const val UCC_REDUCED_QUIET_ZONE = "UCC_REDUCED_QUIET_ZONE"
        const val UCC_EAN_ZERO_EXTEND = "UCC_EAN_ZERO_EXTEND"
        const val UCC_EAN_SUPPLEMENTAL_MODE = "UCC_EAN_SUPPLEMENTAL_MODE"
        const val MSI_ENABLE = "MSI_ENABLE"
        const val MSI_REQUIRE_2_CHECK = "MSI_REQUIRE_2_CHECK"
        const val MSI_SEND_CHECK = "MSI_SEND_CHECK"
        const val MSI_CHECK_2_MOD_11 = "MSI_CHECK_2_MOD_11"
        const val MSI_LENGTH1 = "MSI_LENGTH1"
        const val MSI_LENGTH2 = "MSI_LENGTH2"
        const val GS1_14_ENABLE = "GS1_14_ENABLE"
        const val GS1_14_TO_UPC_EAN = "GS1_14_TO_UPC_EAN"
        const val GS1_LIMIT_ENABLE = "GS1_LIMIT_ENABLE"
        const val GS1_LIMIT_Security_Level = "GS1_LIMIT_Security_Level"
        const val GS1_EXP_ENABLE = "GS1_EXP_ENABLE"
        const val GS1_EXP_LENGTH1 = "GS1_EXP_LENGTH1"
        const val GS1_EXP_LENGTH2 = "GS1_EXP_LENGTH2"
        const val US_POSTNET_ENABLE = "US_POSTNET_ENABLE"
        const val US_PLANET_ENABLE = "US_PLANET_ENABLE"
        const val US_POSTAL_SEND_CHECK = "US_POSTAL_SEND_CHECK"
        const val USPS_4STATE_ENABLE = "USPS_4STATE_ENABLE"
        const val UPU_FICS_ENABLE = "UPU_FICS_ENABLE"
        const val ROYAL_MAIL_ENABLE = "ROYAL_MAIL_ENABLE"
        const val ROYAL_MAIL_SEND_CHECK = "ROYAL_MAIL_SEND_CHECK"
        const val AUSTRALIAN_POST_ENABLE = "AUSTRALIAN_POST_ENABLE"
        const val KIX_CODE_ENABLE = "KIX_CODE_ENABLE"
        const val JAPANESE_POST_ENABLE = "JAPANESE_POST_ENABLE"
        const val KOREA_POST_ENABLE = "KOREA_POST_ENABLE"
        const val Canadian_POSTAL_ENABLE = "Canadian_POSTAL_ENABLE"
        const val POSTAL_GROUP_TYPE_ENABLE = "POSTAL_GROUP_TYPE_ENABLE"
        const val PDF417_ENABLE = "PDF417_ENABLE"
        const val MICROPDF417_ENABLE = "MICROPDF417_ENABLE"
        const val COMPOSITE_CC_AB_ENABLE = "COMPOSITE_CC_AB_ENABLE"
        const val COMPOSITE_CC_C_ENABLE = "COMPOSITE_CC_C_ENABLE"
        const val COMPOSITE_TLC39_ENABLE = "COMPOSITE_TLC39_ENABLE"
        const val COMPOSITE_UPC_MODE = "COMPOSITE_UPC_MODE"
        const val HANXIN_ENABLE = "HANXIN_ENABLE"
        const val HANXIN_INVERSE = "HANXIN_INVERSE"
        const val DATAMATRIX_ENABLE = "DATAMATRIX_ENABLE"
        const val DATAMATRIX_LENGTH1 = "DATAMATRIX_LENGTH1"
        const val DATAMATRIX_LENGTH2 = "DATAMATRIX_LENGTH2"
        const val DATAMATRIX_INVERSE = "DATAMATRIX_INVERSE"

        //public static final String DATAMATRIX_MATRIX_MODE = "DATAMATRIX_MATRIX_MODE";
        const val MAXICODE_ENABLE = "MAXICODE_ENABLE"
        const val QRCODE_ENABLE = "QRCODE_ENABLE"
        const val QRCODE_INVERSE = "QRCODE_INVERSE"
        const val MICROQRCODE_ENABLE = "MICROQRCODE_ENABLE"
        const val AZTEC_ENABLE = "AZTEC_ENABLE"
        const val AZTEC_INVERSE = "AZTEC_INVERSE"
        const val DOTCODE_ENABLE = "DOTCODE_ENABLE"
        const val DEC_2D_LIGHTS_MODE = "DEC_2D_LIGHTS_MODE"
        const val DEC_2D_CENTERING_ENABLE = "DEC_2D_CENTERING_ENABLE"
        const val DEC_2D_CENTERING_MODE = "DEC_2D_CENTERING_MODE"
        const val DEC_2D_WINDOW_UPPER_LX = "DEC_2D_WINDOW_UPPER_LX"
        const val DEC_2D_WINDOW_UPPER_LY = "DEC_2D_WINDOW_UPPER_LY"
        const val DEC_2D_WINDOW_LOWER_RX = "DEC_2D_WINDOW_LOWER_RX"
        const val DEC_2D_WINDOW_LOWER_RY = "DEC_2D_WINDOW_LOWER_RY"
        const val DEC_2D_DEBUG_WINDOW_ENABLE = "DEC_2D_DEBUG_WINDOW_ENABLE"
        const val DEC_ES_EXPOSURE_METHOD = "DEC_ES_EXPOSURE_METHOD" // Auto Exposure Method
        const val DEC_ES_TARGET_VALUE = "DEC_ES_TARGET_VALUE" // Target White Value
        const val DEC_ES_TARGET_PERCENTILE = "DEC_ES_TARGET_PERCENTILE" // Target Percentile
        const val DEC_ES_TARGET_ACCEPT_GAP = "DEC_ES_TARGET_ACCEPT_GAP" // Target Acceptance Gap
        const val DEC_ES_MAX_EXP = "DEC_ES_MAX_EXP" // Maximum Exposure
        const val DEC_ES_MAX_GAIN = "DEC_ES_MAX_GAIN" // Maximum Gain
        const val DEC_ES_FRAME_RATE = "DEC_ES_FRAME_RATE" // Frame Rate
        const val DEC_ES_CONFORM_IMAGE = "DEC_ES_CONFORM_IMAGE" // Image Must Conform
        const val DEC_ES_CONFORM_TRIES = "DEC_ES_CONFORM_TRIES" // Tries for Conform
        const val DEC_ES_SPECULAR_EXCLUSION =
            "DEC_ES_SPECULAR_EXCLUSION" // Exclude Specular Regions
        const val DEC_ES_SPECULAR_SAT = "DEC_ES_SPECULAR_SAT" // Specular Saturation
        const val DEC_ES_SPECULAR_LIMIT = "DEC_ES_SPECULAR_LIMIT" // Specular Limit

        //public static final String DEC_ES_FIXED_EXP = "DEC_ES_FIXED_EXP";			// Fixed Exposure
        const val DEC_ES_FIXED_GAIN = "DEC_ES_FIXED_GAIN" // Fixed Gain
        const val DEC_ES_FIXED_FRAME_RATE = "DEC_ES_FIXED_FRAME_RATE" // Fixed Frame Rate
        const val DEC_ILLUM_POWER_LEVEL = "DEC_ILLUM_POWER_LEVEL"
        const val DEC_PICKLIST_AIM_MODE = "DEC_PICKLIST_AIM_MODE"
        const val DEC_PICKLIST_AIM_DELAY = "DEC_PICKLIST_AIM_DELAY"
        const val DEC_MaxMultiRead_COUNT = "DEC_MaxMultiRead_COUNT"
        const val DEC_Multiple_Decode_TIMEOUT = "DEC_Multiple_Decode_TIMEOUT"
        const val DEC_Multiple_Decode_INTERVAL =
            "DEC_Multiple_Decode_INTERVAL" // urovo tao.he add, 20190314
        const val DEC_Multiple_Decode_MODE = "DEC_Multiple_Decode_MODE"
        const val DEC_EachImageAttempt_TIME = "DEC_EachImageAttempt_TIME"
        const val DEC_OCR_MODE = "DEC_OCR_MODE"
        const val DEC_OCR_TEMPLATE = "DEC_OCR_TEMPLATE"
        const val DEC_OCR_USER_TEMPLATE = "DEC_OCR_USER_TEMPLATE"
        const val SPECIFIC_CODE_GS = "SPECIFIC_CODE_GS"
        const val DATAMATRIX_SYMBOL_SIZE = "DATAMATRIX_SYMBOL_SIZE"
        const val MAXICODE_SYMBOL_SIZE = "MAXICODE_SYMBOL_SIZE"
        const val QRCODE_SYMBOL_SIZE = "QRCODE_SYMBOL_SIZE"
        const val AZTEC_SYMBOL_SIZE = "AZTEC_SYMBOL_SIZE"
        const val GRIDMATRIX_ENABLED = "GRIDMATRIX_ENABLED"
        const val QR_WITHOUT_QZ = "QR_WITHOUT_QZ"
        const val QR_NON_SQUARE_MODULES = "QR_NON_SQUARE_MODULES"
        const val C128_OUT_OF_SPEC = "C128_OUT_OF_SPEC"
        const val CB_SECURITY_LEVEL = "CB_SECURITY_LEVEL"
        const val FIXED_MultiRead_COUNT = "FIXED_MultiRead_COUNT"
        const val UCC_EAN_SUPP_Redundancy = "UCC_EAN_SUPP_Redundancy"
        const val DEC_MIN_ES_MAX_EXP = "DEC_MIN_ES_MAX_EXP"
        const val DEC_MAX_ES_MAX_EXP = "DEC_MAX_ES_MAX_EXP"
        const val DEC_MIN_ES_MAX_GAIN = "DEC_MIN_ES_MAX_GAIN"
        const val DEC_MAX_ES_MAX_GAIN = "DEC_MAX_ES_MAX_GAIN"
        const val DEC_ADJUST_ES_MAX_EXP = "DEC_ADJUST_ES_MAX_EXP"
        const val DEC_USE_DISTANCE_MAP = "DEC_USE_DISTANCE_MAP"
        const val DEC_USE_MLD = "DEC_USE_MLD"
    }
}